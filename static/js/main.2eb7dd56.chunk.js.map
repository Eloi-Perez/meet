{"version":3,"sources":["Event.js","EventList.js","Alert.js","CitySearch.js","NumberOfEvents.js","api.js","WelcomeScreen.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Event","props","state","showDetails","event","this","date","Date","start","dateTime","className","summary","toString","location","onClick","setState","description","href","htmlLink","rel","target","Component","EventList","eventsSliced","map","id","Alert","getStyle","color","getClassName","class","style","text","InfoAlert","ErrorAlert","OfflineAlert","CitySearch","query","suggestions","showSuggestions","infoText","handleInputChanged","value","locations","filter","toUpperCase","indexOf","length","handleItemClicked","suggestion","updateEvents","handleClick","e","select","type","placeholder","onChange","onFocus","display","NumberOfEvents","inputNumEvents","updateNumEvents","awsUrl","checkToken","accessToken","a","fetch","then","res","json","catch","error","result","removeQuery","window","history","pushState","pathname","newurl","protocol","host","getToken","code","encodeCode","encodeURIComponent","access_token","localStorage","setItem","extractLocations","events","Set","getEvents","NProgress","navigator","onLine","data","getItem","done","JSON","parse","getAccessToken","token","url","axios","get","stringify","tokenCheck","removeItem","searchParams","URLSearchParams","search","results","authUrl","WelcomeScreen","showWelcomeScreen","align","src","alt","App","numEvents","undefined","val","locationEvents","mounted","isTokenValid","console","log","slice","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.2eb7dd56.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Event extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDetails: false,\r\n        };\r\n    }\r\n    render() {\r\n        const { event } = this.props;\r\n        let date = new Date(event.start.dateTime)\r\n        return (\r\n            <div className=\"event-container\">\r\n                <h3>{event.summary}</h3>\r\n                <p>{date.toString()}</p>\r\n                <p>{event.location}</p>\r\n                <button className=\"details-btn\" onClick={() => this.setState({ showDetails: !this.state.showDetails })}>\r\n                {this.state.showDetails ? 'Hide Details' : 'Show Details'}\r\n                </button>\r\n                {this.state.showDetails && (\r\n                    <div className=\"event-details\">\r\n                        <p className=\"event-description\">{event.description}</p>\r\n                        <p><a href={event.htmlLink} rel=\"noreferrer\" target=\"_blank\">Event in Google Calendar</a></p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Event;","import React, { Component } from 'react';\r\nimport Event from './Event';\r\n\r\nclass EventList extends Component {\r\n    \r\n    render() {\r\n        const { eventsSliced } = this.props;\r\n        return (\r\n            <ul className=\"EventList\">\r\n                {eventsSliced.map(event =>\r\n                    <li key={event.id}>\r\n                        <Event event={event} />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\n\r\nclass Alert extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = null;\r\n    this.class = \"Alert\";\r\n  }\r\n\r\n  getStyle = () => {\r\n    return {\r\n      color: this.color,\r\n    };\r\n  }\r\n\r\n  getClassName = () => {\r\n    return this.class\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.getClassName()}>\r\n        <p style={this.getStyle()}>{this.props.text}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass InfoAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n  }\r\n}\r\n\r\nclass ErrorAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'red';\r\n  }\r\n}\r\n\r\nclass WarningAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'orange';\r\n  }\r\n}\r\n\r\nclass OfflineAlert extends Alert {\r\n  constructor(props) {\r\n    super(props);\r\n    this.color = 'blue';\r\n    this.class = \"offline\";\r\n  }\r\n}\r\n\r\nexport { InfoAlert, ErrorAlert, WarningAlert, OfflineAlert };","import React, { Component } from 'react';\r\nimport { InfoAlert } from './Alert';\r\n\r\nclass CitySearch extends Component {\r\n    state = {\r\n        query: '',\r\n        suggestions: [],\r\n        showSuggestions: false,\r\n        infoText:''\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({ showSuggestions: true });\r\n        const suggestions = this.props.locations.filter((location) => {\r\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\r\n        });\r\n        if (suggestions.length === 0) {\r\n            this.setState({\r\n                query: value,\r\n                infoText: 'We can not find the city you are looking for. Please try another city',\r\n            });\r\n        } else {\r\n            return this.setState({\r\n                query: value,\r\n                suggestions,\r\n                infoText: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    handleItemClicked = (suggestion) => {\r\n        this.setState({\r\n            query: suggestion,\r\n            showSuggestions: false,\r\n            infoText: ''\r\n        });\r\n\r\n        this.props.updateEvents(suggestion);\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        e.target.select();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"CitySearch\">\r\n                <InfoAlert text={this.state.infoText} />\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"cityInput\"\r\n                    placeholder=\"Search by city\"\r\n                    value={this.state.query}\r\n                    onChange={this.handleInputChanged}\r\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\r\n                    onClick={this.handleClick}\r\n                />\r\n                <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\r\n                    {this.state.suggestions.map((suggestion) => (\r\n                        <li key={suggestion} onClick={() => this.handleItemClicked(suggestion)}>{suggestion}</li>\r\n                    ))}\r\n                    <li key='all' onClick={() => this.handleItemClicked(\"all\")}>\r\n                        <b>See all cities</b>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CitySearch;","import React, { Component } from 'react';\r\nimport { ErrorAlert } from './Alert';\r\n\r\nclass NumberOfEvents extends Component {\r\n    state = {\r\n        inputNumEvents: 32,\r\n        infoText: ''\r\n    }\r\n\r\n    handleInputChanged = (event) => {\r\n        const value = event.target.value;\r\n        if (value > 0 && value < 51) {\r\n            this.setState({\r\n                inputNumEvents: value,\r\n                infoText: ''\r\n            });\r\n            this.props.updateNumEvents(value);\r\n        } else {\r\n            this.setState({\r\n                inputNumEvents: value,\r\n                infoText: 'Select a number from 1 to 50'\r\n            });\r\n        }\r\n    };\r\n\r\n    handleClick = (e) => {\r\n        e.target.select();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"numEvents\">\r\n                <p>Number of events  </p>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"numInput\"\r\n                    value={this.state.inputNumEvents}\r\n                    // onKeyDown={onKeyDown}\r\n                    onChange={this.handleInputChanged}\r\n                    onClick={this.handleClick}\r\n                />\r\n                <ErrorAlert text={this.state.infoText} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NumberOfEvents;","// import { mockData } from './mock-data';\r\nimport axios from 'axios';\r\nimport NProgress from 'nprogress';\r\n\r\nconst awsUrl = 'https://n1ql91m6ff.execute-api.eu-west-2.amazonaws.com/dev/api';\r\n\r\nexport const checkToken = async (accessToken) => {\r\n    const result = await fetch(\r\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\r\n    )\r\n        .then((res) => res.json())\r\n        .catch((error) => error);\r\n\r\n    return result;\r\n};\r\n\r\nconst removeQuery = () => {\r\n    if (window.history.pushState && window.location.pathname) {\r\n        var newurl =\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            window.location.pathname;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    } else {\r\n        newurl = window.location.protocol + \"//\" + window.location.host;\r\n        window.history.pushState(\"\", \"\", newurl);\r\n    }\r\n};\r\n\r\nconst getToken = async (code) => {\r\n    const encodeCode = encodeURIComponent(code);\r\n    const { access_token } = await fetch(awsUrl + '/token/' + encodeCode)\r\n        .then((res) => {\r\n            return res.json();\r\n        })\r\n        .catch((error) => error);\r\n\r\n    access_token && localStorage.setItem(\"access_token\", access_token);\r\n\r\n    return access_token;\r\n};\r\n\r\nexport const extractLocations = (events) => {\r\n    var extractLocations = events.map((event) => event.location);\r\n    var locations = [...new Set(extractLocations)];\r\n    return locations;\r\n};\r\n\r\nexport const getEvents = async () => {\r\n    NProgress.start();\r\n\r\n    // if (window.location.href.startsWith(\"http://localhost\")) {\r\n    //     NProgress.done();\r\n    //     return mockData;\r\n    // }\r\n\r\n    if (!navigator.onLine) {\r\n        const data = localStorage.getItem(\"lastEvents\");\r\n        NProgress.done();\r\n        return data ? JSON.parse(data).events : [];\r\n    }\r\n\r\n    const token = await getAccessToken();\r\n\r\n    if (token) {\r\n        removeQuery();\r\n        const url = awsUrl + '/get-events/' + token;\r\n        const result = await axios.get(url);\r\n        if (result.data) {\r\n            var locations = extractLocations(result.data.events);\r\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\r\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\r\n        }\r\n        NProgress.done();\r\n        return result.data.events;\r\n    }\r\n};\r\n\r\nexport const getAccessToken = async () => {\r\n    const accessToken = localStorage.getItem('access_token');\r\n    const tokenCheck = accessToken && (await checkToken(accessToken));\r\n\r\n    if (!accessToken || tokenCheck.error) {\r\n        await localStorage.removeItem(\"access_token\");\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = await searchParams.get(\"code\");\r\n        if (!code) {\r\n            const results = await axios.get(awsUrl + '/get-auth-url');\r\n            const { authUrl } = results.data;\r\n            return (window.location.href = authUrl);\r\n        }\r\n        return code && getToken(code);\r\n    }\r\n    return accessToken;\r\n}","import React from \"react\";\r\nimport './WelcomeScreen.css';\r\n\r\nfunction WelcomeScreen(props) {\r\n    return props.showWelcomeScreen ?\r\n        (\r\n            <div className=\"WelcomeScreen\">\r\n\r\n                <h1>Welcome to the Meet app</h1>\r\n                <h4>\r\n                    Log in to see upcoming events around the world for\r\n                    full-stack\r\n                    developers\r\n                </h4>\r\n                <div className=\"button_cont\" align=\"center\">\r\n                    <div className=\"google-btn\">\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img\r\n                                className=\"google-icon\"\r\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\r\n                                alt=\"Google sign-in\"\r\n                            />\r\n                        </div>\r\n                        <button onClick={() => { props.getAccessToken() }}\r\n                            rel=\"nofollow noopener\"\r\n                            className=\"btn-text\"\r\n                        >\r\n                            <b>Sign in with google</b>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <a href=\"https://Eloi-Perez.github.io/meet/privacy.html\" rel=\"nofollow noopener\">\r\n                    Privacy policy\r\n                </a>\r\n            </div>\r\n        )\r\n        : null\r\n}\r\nexport default WelcomeScreen;\r\n","import React, { Component } from 'react';\r\nimport EventList from './EventList';\r\nimport CitySearch from './CitySearch';\r\nimport NumberOfEvents from './NumberOfEvents';\r\nimport { getEvents, extractLocations, checkToken, getAccessToken } from './api';\r\nimport { OfflineAlert } from './Alert';\r\nimport WelcomeScreen from './WelcomeScreen';\r\n\r\nimport './App.css';\r\nimport './nprogress.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        events: [],\r\n        locations: [],\r\n        numEvents: 32,\r\n        showWelcomeScreen: undefined\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.mounted = true;\r\n        const accessToken = localStorage.getItem('access_token');\r\n        const isTokenValid = ((await checkToken(accessToken)).error === 'invalid_token') ? false : true;\r\n        const searchParams = new URLSearchParams(window.location.search);\r\n        const code = searchParams.get(\"code\");\r\n        // If code in url or access_token is valid dont show welcome screen else show welcome screen for authorization\r\n        this.setState({ showWelcomeScreen: !(code || isTokenValid) });\r\n        console.log('code: ' + code); console.log('isTokenValid: ' + isTokenValid); console.log(await checkToken(accessToken));\r\n        if ((code || isTokenValid) && this.mounted) {\r\n            getEvents().then((events) => {\r\n                if (this.mounted) {\r\n                    this.setState({\r\n                        events,\r\n                        locations: extractLocations(events),\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    updateNumEvents = (val) => {\r\n        this.setState({\r\n            numEvents: val,\r\n        });\r\n    }\r\n\r\n    updateEvents = (location) => {\r\n        getEvents().then((events) => {\r\n            const locationEvents = (location === 'all') ?\r\n                events :\r\n                events.filter((event) => event.location === location);\r\n            this.setState({\r\n                events: locationEvents,\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\r\n        let eventsSliced = this.state.events.slice(0, this.state.numEvents);\r\n        return (\r\n            <div className=\"App\">\r\n                <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\r\n                <NumberOfEvents updateNumEvents={this.updateNumEvents} />\r\n                <EventList eventsSliced={eventsSliced} />\r\n                <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} />\r\n                {!navigator.onLine && (<OfflineAlert text=\"You are offline, so you are viewing cached data\" />)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport * as atatus from 'atatus-spa';\r\natatus.config('79e25a837d754e7da6059513ad5136c8').install();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}